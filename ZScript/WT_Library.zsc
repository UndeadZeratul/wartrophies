extend class WT_MainHandler
{
	private transient Dictionary WeaponCategories; // [Ace] Key - weapon, value - category.
	private transient Dictionary WeaponCustomTags; // [Ace] Key - weapon, value - custom name.
	private transient Array<string> AvailableCategories;

	private void ParseLibraryLump()
	{
		WeaponCategories = Dictionary.Create();
		WeaponCustomTags = Dictionary.Create();

		int LumpNum = -1;
		while ((LumpNum = Wads.FindLump ("WTLBRARY", LumpNum + 1, Wads.GlobalNamespace)) >= 0)
		{
			string LumpText = Wads.ReadLump(LumpNum);

			if (LumpText != "")
			{
				Array<string> LumpLines;
				LumpText.Split(LumpLines, "\n");

				for (int i = 0; i < LumpLines.Size(); ++i)
				{
					Array<string> ParsedLines;
					LumpLines[i].Split(ParsedLines, ",");

					string ClassName;

					// [Ace] Just in case.
					if (ParsedLines.Size() > 0)
					{
						ClassName = ParsedLines[0].MakeLower();
						ClassName.Replace("\n", "");
					}

					if (ParsedLines.Size() > 1)
					{
						string Category = ParsedLines[1];
						Category.Replace("\n", "");
						WeaponCategories.Insert(ClassName, Category);
					}

					if (ParsedLines.Size() > 2)
					{
						string CustomName = ParsedLines[2];
						CustomName.Replace("\n", "");
						WeaponCustomTags.Insert(ClassName, CustomName);

					}
				}
			}
		}

		// [Ace] Populate the available categories array.
		AvailableCategories.Clear();
		AvailableCategories.Push("All Weapons");
		let it = DictionaryIterator.Create(WeaponCategories);
		while (it.Next())
		{
			AvailableCategories.Push(it.Value());
		}
	}
}