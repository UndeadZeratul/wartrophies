extend class WT_MainHandler
{
	private CVar IWADWeaponFilter;
	private CVar IWADMonsterFilter;

	enum SearchType
	{
		Search_Weapons,
		Search_Monsters
	}

	// --------------------------------------------------
	// IGNORE LIST
	// --------------------------------------------------

	static const class<Actor> DoomWeapons[] =
	{
		"Fist",
		"Chainsaw",
		"Pistol",
		"Shotgun",
		"SuperShotgun",
		"Chaingun",
		"RocketLauncher",
		"PlasmaRifle",
		"BFG9000"
	};

	static const class<Actor> HereticWeapons[] =
	{
		"Beak",
		"BeakPowered",
		"Blaster",
		"BlasterPowered",
		"Crossbow",
		"CrossbowPowered",
		"Gauntlets",
		"GauntletsPowered",
		"GoldWand",
		"GoldWandPowered",
		"Mace",
		"MacePowered",
		"PhoenixRod",
		"PhoenixRodPowered",
		"SkullRod",
		"SkullRodPowered",
		"Staff",
		"StaffPowered"
	};

	static const class<Actor> HexenWeapons[] =
	{
		"CWeapFlame",
		"CWeapMace",
		"CWeapStaff",
		"CWeapWraithverge",
		"FWeapAxe",
		"FWeapFist",
		"FWeapHammer",
		"FWeapQuietus",
		"MWeapBloodscourge",
		"MWeapFrost",
		"MWeapLightning",
		"MWeapWand"
	};

	static const class<Actor> StrifeWeapons[] =
	{
		"PunchDagger",
		"StrifeCrossbow",
		"StrifeCrossbow2",
		"AssaultGun",
		"AssaultGunStanding",
		"MiniMissileLauncher",
		"FlameThrower",
		"Mauler",
		"Mauler2",
		"StrifeGrenadeLauncher",
		"StrifeGrenadeLauncher2",
		"Sigil",
		"Sigil1",
		"Sigil2",
		"Sigil3",
		"Sigil4",
		"Sigil5"
	};

	static const class<Actor> DoomMonsters[] =
	{
		"Arachnotron",
		"Archvile",
		"BaronOfHell",
		"HellKnight",
		"Cacodemon",
		"Cyberdemon",
		"Demon",
		"Spectre",
		"ChaingunGuy",
		"DoomImp",
		"Fatso",
		"LostSoul",
		"PainElemental",
		"Revenant",
		"ShotgunGuy",
		"SpiderMastermind",
		"WolfensteinSS",
		"ZombieMan",
		"StealthArachnotron",
		"StealthArchvile",
		"StealthBaron",
		"StealthHellKnight",
		"StealthCacodemon",
		"StealthDemon",
		"StealthChaingunGuy",
		"StealthDoomImp",
		"StealthFatso",
		"StealthRevenant",
		"StealthShotgunGuy",
		"StealthZombieMan"
	};

	static const class<Actor> HereticMonsters[] =
	{
		"Beast",
		"Chicken",
		"CLink",
		"Ironlich",
		"Knight",
		"KnightGhost",
		"Minotaur",
		"Mummy",
		"MummyGhost",
		"MummyLeader",
		"MummyLeaderGhost",
		"Snake",
		"Sorcerer1",
		"Sorcerer2",
		"Wizard",
		"HereticImp",
		"HereticImpLeader"
	};

	static const class<Actor> HexenMonsters[] =
	{
		"Bishop",
		"Centaur",
		"CentaurLeader",
		"CentaurMash",
		"Demon1",
		"Demon1Mash",
		"Demon2",
		"Demon2Mash",
		"Ettin",
		"EttinMash",
		"FireDemon",
		"IceGuy",
		"Serpent",
		"SerpentLeader",
		"Wraith",
		"WraithBuried",
		"Dragon",
		"ClericBoss",
		"FighterBoss",
		"MageBoss",
		"Heresiarch",
		"Korax",
		"Bat",
		"MinotaurFriend",
		"Pig"
	};

	static const class<Actor> StrifeMonsters[] =
	{
		"Acolyte",
		"AcolyteTan",
		"AcolyteRed",
		"AcolyteRust",
		"AcolyteGray",
		"AcolyteDGreen",
		"AcolyteGold",
		"AcolyteLGreen",
		"AcolyteBlue",
		"AcolyteShadow",
		"AcolyteToBe",
		"Macil1",
		"Macil2",
		"Rebel",
		"Rebel1",
		"Rebel2",
		"Rebel3",
		"Rebel4",
		"Rebel5",
		"Rebel6",
		"Beggar",
		"Beggar1",
		"Beggar2",
		"Beggar3",
		"Beggar4",
		"Beggar5",
		"Peasant",
		"Peasant1",
		"Peasant2",
		"Peasant3",
		"Peasant4",
		"Peasant5",
		"Peasant6",
		"Peasant7",
		"Peasant8",
		"Peasant9",
		"Peasant10",
		"Peasant11",
		"Peasant12",
		"Peasant13",
		"Peasant14",
		"Peasant15",
		"Peasant16",
		"Peasant17",
		"Peasant18",
		"Peasant19",
		"Peasant20",
		"Peasant21",
		"Peasant22",
		"AlienSpectre1",
		"AlienSpectre2",
		"AlienSpectre3",
		"AlienSpectre4",
		"AlienSpectre5",
		"EntityBoss",
		"EntitySecond",
		"Loremaster",
		"Oracle",
		"Programmer",
		"StrifeBishop",
		"KneelingGuy",
		"Sentinel",
		"Crusader",
		"Inquisitor",
		"Stalker",
		"CeilingTurret",
		"Templar",
		"Reaver"
	};

	private WT_IwadFilter GetIwadType(SearchType type, class<Actor> a) const
	{
		if (!a)
		{
			return Filter_None;
		}

		// [Ace] Unfortunately it needs to go through all of these.
		switch (type)
		{
			case Search_Weapons:
				for (int i = 0; i < DoomWeapons.Size(); ++i) if (a == DoomWeapons[i]) return Filter_Doom;
				for (int i = 0; i < HereticWeapons.Size(); ++i) if (a == HereticWeapons[i]) return Filter_Heretic;
				for (int i = 0; i < HexenWeapons.Size(); ++i) if (a == HexenWeapons[i]) return Filter_Hexen;
				for (int i = 0; i < StrifeWeapons.Size(); ++i) if (a == StrifeWeapons[i]) return Filter_Strife;
				break;

			case Search_Monsters:
				for (int i = 0; i < DoomMonsters.Size(); ++i) if (a == DoomMonsters[i]) return Filter_Doom;
				for (int i = 0; i < HereticMonsters.Size(); ++i) if (a == HereticMonsters[i]) return Filter_Heretic;
				for (int i = 0; i < HexenMonsters.Size(); ++i) if (a == HexenMonsters[i]) return Filter_Hexen;
				for (int i = 0; i < StrifeMonsters.Size(); ++i) if (a == StrifeMonsters[i]) return Filter_Strife;
				break;
		}

		return Filter_None;
	}
}